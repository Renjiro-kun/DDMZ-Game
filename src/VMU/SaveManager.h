#pragma once

#define APP_ID "DDMZ"
#define SAVE_NAME "LAST_ESCAPE_SAVE"
#define LONG_DESC "The Last Escape save data"
#define SHORT_DESC "MAIN_SAVE"

const unsigned char VMU_SAVE_ICON[512] = {
    0x0F,0xD1,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x1D,0xF0,0xF1,0x1D,0xDD,0xDD,0xDD,0xDD,0xDD,
    0xDD,0xDD,0xDD,0xDD,0xDD,0xDD,0xDD,0xD1,0x1F,0xD1,0x90,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x09,0x1D,0x11,0x00,0x09,0xFF,0xFF,0x0F,0xFF,0xF0,0xF9,0x0F,0xF0,0xFF,0xFF,0x90,0x00,0x11,0x11,0x90,0x0D,0xDF,0xD4,
    0xF4,0xFF,0x49,0x4F,0x04,0xFF,0x4F,0xFF,0x90,0x09,0x11,0x11,0x99,0x0D,0xD9,0xFF,0xF4,0x9F,0x49,0x4F,0x94,0xFF,0x49,
    0x9F,0x00,0x99,0x11,0x11,0x99,0x9F,0xDD,0x4D,0xF4,0xDD,0x49,0x4F,0x94,0xFF,0x4D,0xDD,0x09,0x99,0x11,0x11,0x99,0x94,
    0xD0,0xD4,0xD4,0x0F,0x49,0x4F,0xF4,0x9D,0x40,0x09,0x00,0x99,0x11,0x11,0x90,0x94,0x44,0x4F,0xD4,0x0F,0x49,0x44,0x4D,
    0x0D,0x44,0x44,0x90,0x09,0x11,0x11,0x00,0x09,0x90,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x09,0x00,0x00,0x11,0xD1,
    0x90,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x09,0x1D,0xF1,0x1D,0xDD,0xDD,0xDD,0xDD,0xDD,0xDD,
    0xDD,0xDD,0xDD,0xDD,0xDD,0xDD,0xD1,0x1F,0x0F,0xD1,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x1D,
    0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x55,0x55,0x55,0x55,0x58,0x88,
    0x85,0x55,0x55,0x88,0x88,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x5B,0xB5,0x5A,0x85,0x55,0x55,0x88,0x55,0x55,0x55,
    0xB5,0xB5,0x55,0x55,0x55,0x55,0x55,0x55,0x5A,0x85,0x55,0x55,0x88,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,
    0x58,0x88,0x85,0x55,0x55,0x88,0x88,0x55,0x55,0x55,0x58,0x55,0x66,0xA6,0x66,0xEE,0xEE,0xE6,0x66,0x66,0x66,0x66,0x6E,
    0xEE,0xEE,0xEE,0x66,0xAA,0x66,0xA6,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0xC6,0xA6,0x66,0xA6,
    0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0xC6,0xA6,0x66,0x86,0x77,0x77,0x77,0x77,0x77,0x77,0x77,
    0x77,0x77,0x77,0x77,0x77,0xC6,0x86,0x66,0x8A,0x77,0x77,0x77,0x77,0x77,0x77,0x77,0x77,0x77,0x77,0x77,0x77,0xC6,0x86,
    0x66,0x8A,0x72,0x22,0x22,0x22,0x22,0x22,0x22,0x22,0x22,0x22,0x22,0x22,0xC6,0x86,0x66,0xAA,0x22,0x22,0x22,0x22,0x22,
    0x22,0x22,0x22,0x22,0x22,0x22,0x22,0xC6,0xA6,0x66,0x8A,0x2B,0xBB,0xBB,0xBB,0xBB,0xBB,0xBB,0xBB,0xBB,0xBB,0xBB,0xBB,
    0xC6,0x86,0x66,0x8A,0x2B,0x2B,0xBB,0x2B,0x22,0xBB,0x2B,0xBB,0xB2,0xB2,0xBB,0xB2,0xC6,0x86,0x6A,0x86,0x22,0x22,0x22,
    0x22,0x22,0x22,0x22,0x22,0x22,0x22,0x22,0x22,0xCA,0x86,0x6A,0x8A,0x22,0x22,0x22,0x22,0x22,0x22,0x22,0x22,0x22,0x22,
    0x22,0x22,0xCA,0x86,0x66,0x86,0x33,0x23,0x32,0x33,0x23,0x23,0x32,0x33,0x32,0x32,0x22,0x33,0xC6,0x86,0x66,0xA6,0x33,
    0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0xC6,0xA6,0x6A,0x8A,0x33,0x33,0x33,0x33,0x33,0x33,0x33,0x33,
    0x33,0x33,0x33,0x33,0xCA,0x86
};

const unsigned char VMU_SAVE_ICON_PALLETE[32] = {
    0xCF,0xFE,0x3E,0xFC,0xA0,0xF2,0xC0,0xF2,0x3E,0xFB,0x66,0xF6,0x99,0xF9,0xB0,0xF0,0x77,0xF7,0xBF,0xFE,0x88,0xF8,0x90,
    0xF2,0x86,0xF6,0x4E,0xFC,0xAA,0xFA,0x7F,0xFD
};


const size_t INTERACTABLE_STATES_SIZE = 100;
const size_t INVENTORY_ITEMS_SIZE = 10;

struct InteractableInfo
{
    int CellX = -1;
    int CellY = -1;
    bool State = false;

    bool IsValidObject()
    {
        return CellX > -1 && CellY > -1;
    }

    bool CheckObject(int cellX, int cellY)
    {
        return cellX == CellX && cellY == CellY;
    }
};

struct SaveDataPkg
{
    SaveDataPkg()
    {
        LevelIdx = 0;
        PositionX = 0;
        PositionY = 0;
        BGMVolume = 100;
        SFXVolume = 100;
        UseVibration = false;
    }

    InteractableInfo InteractableStates[INTERACTABLE_STATES_SIZE];
    int32_t InventoryItems[INVENTORY_ITEMS_SIZE];
    uint16_t LevelIdx = 0;
    int32_t PositionX = 0;
    int32_t PositionY = 0;
    float TimeLimit = -1.f;
    int32_t BGMVolume = 100;
    int32_t SFXVolume = 100;
    bool UseVibration = false;
};


class SaveGameManager
{
public:
    static SaveGameManager& GetInstance()
    {
        static SaveGameManager instance;
        return instance;
    }
public:
    void Init();
    void Shutdown();

    void SaveData();
    void LoadData();
public:
    void SetCurrentLevel(uint16_t lvlIdx){ m_CurrentSaveData.LevelIdx = lvlIdx; }
    int16_t GetCurrentLevel() const { return m_CurrentSaveData.LevelIdx; }

    bool GetUseVibration() { return m_CurrentSaveData.UseVibration; }
    void SetUseVibration(bool value) { m_CurrentSaveData.UseVibration = value; }

    void SetPlayerPositionX(int value) { m_CurrentSaveData.PositionX = value; }
    void SetPlayerPositionY(int value) { m_CurrentSaveData.PositionY = value; }

    int GetPlayerPositionX() { return m_CurrentSaveData.PositionX; }
    int GetPlayerPositionY() { return m_CurrentSaveData.PositionY; }

    float GetTimeLimit() { return m_CurrentSaveData.TimeLimit; }
    void SetTimeLimit(float value) { m_CurrentSaveData.TimeLimit = value; }

    void SetSFXVolume(int value) { m_CurrentSaveData.SFXVolume = value; }
    int GetSFXVolume() { return m_CurrentSaveData.SFXVolume; }

    void SetBGMVolume(int value) { m_CurrentSaveData.BGMVolume = value; }
    int GetBGMVolume() { return m_CurrentSaveData.BGMVolume; }

    InteractableInfo* GetInteractableStates() { return m_CurrentSaveData.InteractableStates; }

    int32_t* GetInventoryItems() { return m_CurrentSaveData.InventoryItems; }

    void ResetSaveGame();
    void ResetOptions();
    void ResetInteractableStates();
private:
    void CopyDataFromVMUPkg(const SaveDataPkg* pkg);
    
private:
    SaveGameManager() = default;
    ~SaveGameManager() = default;
    SaveGameManager(const SaveGameManager&) = delete;
    SaveGameManager& operator=(const SaveGameManager&) = delete;
private:
    static SaveDataPkg m_CurrentSaveData;
};